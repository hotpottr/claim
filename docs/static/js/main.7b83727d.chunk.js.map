{"version":3,"sources":["reportWebVitals.js","contexts/UtilContext.tsx","config/abi/rewarder.js","util/misc.ts","config/constants.ts","config/abi/rewardToken.js","config/abi/multicall2.js","util/multicall.ts","contexts/AnyContext.tsx","contexts/Web3Context.tsx","config/abi/nft.js","contexts/UserContext.tsx","components/A.tsx","resources/img/tokens/LABS.png","config/tokens.ts","resources/img/potluck-labs.png","views/Home.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UtilContext","createContext","medium","small","mqlMedium","window","matchMedia","mqlSmall","UtilContextProvider","children","useState","matches","setMedium","setSmall","useEffect","mediaQueryChanged","addEventListener","removeEventListener","Provider","value","REWARDER_ABI","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","shortenAddress","address","n","slice","toHex","x","toString","console","log","switchOrAddChain","a","ethereum","request","method","chainId","CHAIN_ID","error","params","code","chainName","CHAIN_DATA","nativeCurrency","rpcUrls","blockExplorerUrls","switchChain","alert","JSON","stringify","onClickConnect","provider","account","send","handleTxError","err","extraMessage","data","message","addToken","token","options","getAddress","symbol","decimals","image","FTM_MAIN","FTM_TEST","REWARD_TOKEN_SYMBOL","contracts","addresses","abi","components","config","rpcUrl","scan","RPC_URL","NETWORK","SCAN","undefined","getChainData","obj","getMulticall2Contract","signerOrProvider","ethers","Contract","multicall2","calls","requireSuccess","multi","itf","utils","Interface","calldata","map","call","toLowerCase","encodeFunctionData","tryAggregate","returnData","res","callResult","i","result","decodeFunctionResult","AnyContext","anyProvider","luckyDecimals","luckyTotalSupply","AnyContextProvider","setProvider","setLuckyDecimals","setLuckyTotalSupply","providers","getDefaultProvider","loadLuckyData","useCallback","luckyAddress","luckyAbi","_decimals","_totalSupply","loadAll","interval","setInterval","clearInterval","Web3Context","ethBalance","Web3ContextProvider","setChainId","setAccount","setEthBalance","on","accounts","location","reload","Web3Provider","getNetwork","listAccounts","getBalance","NFT_ABI","getBalances","push","results","balances","length","getOwnedTokenIds","nftAddress","balance","calls1","xx","tokenIds","rewarderAddress","rewarder","calls2","tokenId","yy","checkpoints","getNfts","count","results1","rs1","y","results2","rs2","calls3","results3","rs3","xs","weight","debug","UserContext","pendingReward","ownedTokens","nfts","claim","UserContextProvider","useContext","rewarderContract","setRewarderContract","setPendingReward","setOwnedTokens","setNfts","signer","getSigner","loadOwnedTokens","Object","keys","ownedTokenIds","loadRewarder","entriesCount","toNumber","update","A","className","href","target","rel","tokens","url","iconLABS","f","units","formatUnits","c","d","commify","parseFloat","toFixed","Home","loaded","setLoaded","needsUpdate","setNeedsUpdate","key","nft","cs","WrongNetwork","onClick","NotConnected","Connected","values","src","banner","alt","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b83727d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createContext, ReactNode, useEffect, useState } from \"react\";\n\n// const debug = (message: any, ...params: any[]) => {\n//   console.log(\"[UtilContext]:\", message, ...params);\n// };\n\nexport const UtilContext = createContext<{\n  medium: boolean;\n  small: boolean;\n}>({\n  medium: null,\n  small: null,\n});\n\nconst mqlMedium = window.matchMedia(`(max-width: 700px)`);\nconst mqlSmall = window.matchMedia(`(max-width: 420px)`);\n\nexport const UtilContextProvider = ({ children }: { children: ReactNode }) => {\n  const [medium, setMedium] = useState(mqlMedium.matches);\n  const [small, setSmall] = useState(mqlSmall.matches);\n\n  useEffect(() => {\n    const mediaQueryChanged = () => {\n      setMedium(mqlMedium.matches);\n      setSmall(mqlSmall.matches);\n    };\n    mqlMedium.addEventListener(\"change\", mediaQueryChanged);\n    mqlSmall.addEventListener(\"change\", mediaQueryChanged);\n    return () => {\n      mqlMedium.removeEventListener(\"change\", mediaQueryChanged);\n      mqlSmall.removeEventListener(\"change\", mediaQueryChanged);\n    };\n  }, []);\n\n  return (\n    <UtilContext.Provider\n      value={{\n        medium: medium,\n        small: small,\n      }}\n    >\n      {children}\n    </UtilContext.Provider>\n  );\n};\n","export const REWARDER_ABI = [\n  {\n    inputs: [{ internalType: \"contract IRewardToken\", name: \"rewardToken_\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: false, internalType: \"address\", name: \"to\", type: \"address\" },\n      { indexed: false, internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"ClaimedReward\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"previousOwner\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"newOwner\", type: \"address\" },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      { internalType: \"contract INFT\", name: \"nft\", type: \"address\" },\n      { internalType: \"uint256\", name: \"weight\", type: \"uint256\" },\n    ],\n    name: \"addEntry\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"contract INFT\", name: \"nft\", type: \"address\" },\n      { internalType: \"uint256\", name: \"weight\", type: \"uint256\" },\n    ],\n    name: \"editEntry\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    name: \"entries\",\n    outputs: [\n      { internalType: \"contract INFT\", name: \"nft\", type: \"address\" },\n      { internalType: \"uint256\", name: \"weight\", type: \"uint256\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"entriesCount\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"contract INFT\", name: \"nft\", type: \"address\" }],\n    name: \"entryExists\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"contract INFT\", name: \"nft\", type: \"address\" }],\n    name: \"getEntryWeight\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"contract INFT\", name: \"nft\", type: \"address\" },\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n    ],\n    name: \"lastCheckpoint\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"pendingReward\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"contract INFT\", name: \"nft\", type: \"address\" }],\n    name: \"removeEntry\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  { inputs: [], name: \"renounceOwnership\", outputs: [], stateMutability: \"nonpayable\", type: \"function\" },\n  {\n    inputs: [],\n    name: \"rewardPerSecond\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"rewardToken\",\n    outputs: [{ internalType: \"contract IRewardToken\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"rewardPerSecond_\", type: \"uint256\" }],\n    name: \"setRewardPerSecond\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  { inputs: [], name: \"update\", outputs: [], stateMutability: \"nonpayable\", type: \"function\" },\n  { stateMutability: \"payable\", type: \"receive\" },\n];\n","import { ethers } from \"ethers\";\nimport { CHAIN_DATA, CHAIN_ID, getAddress } from \"../config/constants\";\nimport { T } from \"../types/mytypes\";\n\ndeclare global {\n  interface Window {\n    ethereum: any;\n  }\n}\n\nexport const shortenAddress = (address: string, n = 4) => {\n  return address.slice(0, 2 + n) + \"...\" + address.slice(-n);\n};\n\nexport const toHex = (n: number) => {\n  const x = `0x${n.toString(16)}`;\n  console.log(`toHex(${n}) = ${x}`);\n  return x;\n};\n\nexport const switchOrAddChain = async () => {\n  try {\n    const chainId = await window.ethereum.request({ method: \"eth_chainId\" });\n    console.log(\"chainId:\", chainId);\n    if (chainId === toHex(CHAIN_ID)) {\n      return;\n    }\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n\n  try {\n    // check if the chain to connect to is installed\n    await window.ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: toHex(CHAIN_ID) }],\n    });\n  } catch (err) {\n    // This error code indicates that the chain has not been added to\n    // MetaMask. If it is not, then install it into the user MetaMask.\n    if (err.code === 4902) {\n      try {\n        await window.ethereum.request({\n          method: \"wallet_addEthereumChain\",\n          params: [\n            {\n              chainId: toHex(CHAIN_ID),\n              chainName: CHAIN_DATA.chainName,\n              nativeCurrency: CHAIN_DATA.nativeCurrency,\n              rpcUrls: CHAIN_DATA.rpcUrls,\n              blockExplorerUrls: CHAIN_DATA.blockExplorerUrls,\n            },\n          ],\n        });\n      } catch (addError) {\n        console.error(addError);\n        throw addError;\n      }\n    }\n    console.error(err);\n    throw err;\n  }\n};\n\nexport const switchChain = async () => {\n  if (!window.ethereum) {\n    return alert(\"MetaMask is not installed. Please consider installing it: https://metamask.io/download.html\");\n  }\n\n  try {\n    await switchOrAddChain();\n  } catch (err) {\n    return alert(JSON.stringify(err));\n  }\n};\n\nexport const onClickConnect = async (provider: ethers.providers.Web3Provider, account: string) => {\n  if (!window.ethereum) {\n    return alert(\"MetaMask is not installed. Please consider installing it: https://metamask.io/download.html\");\n  }\n\n  try {\n    await switchOrAddChain();\n  } catch (err) {\n    return alert(JSON.stringify(err));\n  }\n\n  // setupMetaMaskEvents();\n\n  console.log(account);\n\n  if (account == null) {\n    try {\n      // Connecting sends an accountChanged event from MetaMask\n      await provider.send(\"eth_requestAccounts\", []);\n    } catch (err) {\n      return alert(\"Please connect to a MetaMask account.\");\n    }\n  }\n};\n\nexport const handleTxError = (err: any) => {\n  console.error(err);\n  if (err.code === 4001) {\n    return; // User denied transaction, so just ignore\n  }\n  const extraMessage = err.data != null ? ` [${err.data.message}]` : \"\";\n  return alert(`Error ${err.code}: ${err.message}${extraMessage}`);\n};\n\nexport const addToken = async (token: T.Token) => {\n  try {\n    // Returns a boolean indicating whether or not the token was added.\n    // Like any RPC method, an error may be thrown.\n    await window.ethereum.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\", // Initially only supports ERC20, but eventually more!\n        options: {\n          address: getAddress(token), // The address that the token is at.\n          symbol: token.symbol, // A ticker symbol or shorthand, up to 5 chars.\n          decimals: token.decimals, // The number of decimals in the token\n          image: token.image, // A string url of the token logo\n        },\n      },\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { REWARD_TOKEN_ABI } from \"./abi/rewardToken\";\nimport { REWARDER_ABI } from \"./abi/rewarder\";\nimport { MULTICALL2_ABI } from \"./abi/multicall2\";\nimport { toHex } from \"../util/misc\";\n\nexport const FTM_MAIN = 250;\nexport const FTM_TEST = 4002;\n\nexport const REWARD_TOKEN_SYMBOL = \"LABS\";\nexport const REWARD_TOKEN_NAME = \"Potluck Labs Token\";\nexport const REWARD_TOKEN_DECIMALS = 18;\nexport const REWARD_TOKEN_URL = \"\";\nconst REWARD_TOKEN_ADDRESS_MAIN = \"0x623d0f6a58e563C8627Da26B567269A18555aa52\";\nconst REWARD_TOKEN_ADDRESS_TEST = \"0x880B631ED94A265cA89a8E266513017033ffD222\";\n\ntype Contract = {\n  addresses: {\n    [FTM_MAIN]: string;\n    [FTM_TEST]: string;\n  };\n  abi: any;\n};\n\ntype Contracts = {\n  [REWARD_TOKEN_SYMBOL]: Contract;\n  rewarder: Contract;\n  multicall2: Contract;\n};\n\nexport const contracts: Contracts = {\n  [REWARD_TOKEN_SYMBOL]: {\n    addresses: {\n      [FTM_MAIN]: REWARD_TOKEN_ADDRESS_MAIN,\n      [FTM_TEST]: REWARD_TOKEN_ADDRESS_TEST,\n    },\n    abi: REWARD_TOKEN_ABI,\n  },\n\n  rewarder: {\n    addresses: {\n      [FTM_MAIN]: \"0xEd37405dE14e39f72e4A405DE32B6B90C96B97e5\",\n      [FTM_TEST]: \"0xBaBFDD8cf3de860B8a78d3dadaBE2DCeB0F5394c\",\n    },\n    abi: REWARDER_ABI,\n  },\n\n  multicall2: {\n    addresses: {\n      [FTM_MAIN]: \"0x266557A864680A1401A3506c0eb72934BD13Bf59\",\n      [FTM_TEST]: \"0x434fBefE0D506e2A6af3935AB80Ac9219c751413\",\n    },\n    abi: MULTICALL2_ABI,\n  },\n};\n\ntype Config = {\n  chainId: {\n    [FTM_MAIN]: number;\n    [FTM_TEST]: number;\n  };\n  rpcUrl: {\n    [FTM_MAIN]: string;\n    [FTM_TEST]: string;\n  };\n  scan: {\n    [FTM_MAIN]: string;\n    [FTM_TEST]: string;\n  };\n};\n\nconst config: Config = {\n  chainId: {\n    [FTM_MAIN]: FTM_MAIN,\n    [FTM_TEST]: FTM_TEST,\n  },\n  rpcUrl: {\n    [FTM_MAIN]: \"https://rpc.ftm.tools\",\n    [FTM_TEST]: \"https://rpc.testnet.fantom.network\",\n  },\n  scan: {\n    [FTM_MAIN]: \"https://ftmscan.com\",\n    [FTM_TEST]: \"https://testnet.ftmscan.com\",\n  },\n};\n\nconst NETWORK = FTM_TEST;\n\nexport const RPC_URL = config.rpcUrl[NETWORK];\nexport const CHAIN_ID = config.chainId[NETWORK];\nexport const SCAN = config.scan[NETWORK];\n\nconst getChainData = (chainId: number): any => {\n  switch (chainId) {\n    case FTM_MAIN:\n      return {\n        chainId: toHex(FTM_MAIN),\n        chainName: \"Fantom\",\n        nativeCurrency: { name: \"Fantom\", symbol: \"FTM\", decimals: 18 },\n        rpcUrls: [config.rpcUrl[FTM_MAIN]],\n        blockExplorerUrls: [config.scan[FTM_MAIN]],\n      };\n    case FTM_TEST:\n      return {\n        chainId: toHex(FTM_TEST),\n        chainName: \"Fantom Testnet\",\n        nativeCurrency: { name: \"Fantom\", symbol: \"FTM\", decimals: 18 },\n        rpcUrls: [config.rpcUrl[FTM_TEST]],\n        blockExplorerUrls: [config.scan[FTM_TEST]],\n      };\n    default:\n      return {\n        chainId: toHex(chainId),\n        chainName: undefined,\n        nativeCurrency: undefined,\n        rpcUrls: undefined,\n        blockExplorerUrls: undefined,\n      };\n  }\n};\n\nexport const CHAIN_DATA = getChainData(CHAIN_ID);\n\nexport const getAddress = (obj: {\n  addresses: {\n    [_: string]: string;\n  };\n}): string => {\n  return obj.addresses[CHAIN_ID];\n};\n","export const REWARD_TOKEN_ABI = [\n  { inputs: [], stateMutability: \"nonpayable\", type: \"constructor\" },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"owner\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"spender\", type: \"address\" },\n      { indexed: false, internalType: \"uint256\", name: \"value\", type: \"uint256\" },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"previousOwner\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"newOwner\", type: \"address\" },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\n      { indexed: false, internalType: \"uint256\", name: \"value\", type: \"uint256\" },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\n    ],\n    name: \"allowance\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"approve\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"account\", type: \"address\" }],\n    name: \"balanceOf\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"from\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"burn\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [{ internalType: \"uint8\", name: \"\", type: \"uint8\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\n      { internalType: \"uint256\", name: \"subtractedValue\", type: \"uint256\" },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\n      { internalType: \"uint256\", name: \"addedValue\", type: \"uint256\" },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  { inputs: [], name: \"renounceOwnership\", outputs: [], stateMutability: \"nonpayable\", type: \"function\" },\n  {\n    inputs: [],\n    name: \"rewarder\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"rewarder_\", type: \"address\" }],\n    name: \"setRewarder\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"transfer\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"sender\", type: \"address\" },\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"transferFrom\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  { stateMutability: \"payable\", type: \"receive\" },\n];\n","export const MULTICALL2_ABI = [\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"target\", type: \"address\" },\n          { internalType: \"bytes\", name: \"callData\", type: \"bytes\" },\n        ],\n        internalType: \"struct Multicall2.Call[]\",\n        name: \"calls\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"aggregate\",\n    outputs: [\n      { internalType: \"uint256\", name: \"blockNumber\", type: \"uint256\" },\n      { internalType: \"bytes[]\", name: \"returnData\", type: \"bytes[]\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"target\", type: \"address\" },\n          { internalType: \"bytes\", name: \"callData\", type: \"bytes\" },\n        ],\n        internalType: \"struct Multicall2.Call[]\",\n        name: \"calls\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"blockAndAggregate\",\n    outputs: [\n      { internalType: \"uint256\", name: \"blockNumber\", type: \"uint256\" },\n      { internalType: \"bytes32\", name: \"blockHash\", type: \"bytes32\" },\n      {\n        components: [\n          { internalType: \"bool\", name: \"success\", type: \"bool\" },\n          { internalType: \"bytes\", name: \"returnData\", type: \"bytes\" },\n        ],\n        internalType: \"struct Multicall2.Result[]\",\n        name: \"returnData\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"blockNumber\", type: \"uint256\" }],\n    name: \"getBlockHash\",\n    outputs: [{ internalType: \"bytes32\", name: \"blockHash\", type: \"bytes32\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getBlockNumber\",\n    outputs: [{ internalType: \"uint256\", name: \"blockNumber\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentBlockCoinbase\",\n    outputs: [{ internalType: \"address\", name: \"coinbase\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentBlockDifficulty\",\n    outputs: [{ internalType: \"uint256\", name: \"difficulty\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentBlockGasLimit\",\n    outputs: [{ internalType: \"uint256\", name: \"gaslimit\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentBlockTimestamp\",\n    outputs: [{ internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"addr\", type: \"address\" }],\n    name: \"getEthBalance\",\n    outputs: [{ internalType: \"uint256\", name: \"balance\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getLastBlockHash\",\n    outputs: [{ internalType: \"bytes32\", name: \"blockHash\", type: \"bytes32\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"bool\", name: \"requireSuccess\", type: \"bool\" },\n      {\n        components: [\n          { internalType: \"address\", name: \"target\", type: \"address\" },\n          { internalType: \"bytes\", name: \"callData\", type: \"bytes\" },\n        ],\n        internalType: \"struct Multicall2.Call[]\",\n        name: \"calls\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"tryAggregate\",\n    outputs: [\n      {\n        components: [\n          { internalType: \"bool\", name: \"success\", type: \"bool\" },\n          { internalType: \"bytes\", name: \"returnData\", type: \"bytes\" },\n        ],\n        internalType: \"struct Multicall2.Result[]\",\n        name: \"returnData\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"bool\", name: \"requireSuccess\", type: \"bool\" },\n      {\n        components: [\n          { internalType: \"address\", name: \"target\", type: \"address\" },\n          { internalType: \"bytes\", name: \"callData\", type: \"bytes\" },\n        ],\n        internalType: \"struct Multicall2.Call[]\",\n        name: \"calls\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"tryBlockAndAggregate\",\n    outputs: [\n      { internalType: \"uint256\", name: \"blockNumber\", type: \"uint256\" },\n      { internalType: \"bytes32\", name: \"blockHash\", type: \"bytes32\" },\n      {\n        components: [\n          { internalType: \"bool\", name: \"success\", type: \"bool\" },\n          { internalType: \"bytes\", name: \"returnData\", type: \"bytes\" },\n        ],\n        internalType: \"struct Multicall2.Result[]\",\n        name: \"returnData\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","import { ethers } from \"ethers\";\nimport { contracts, getAddress } from \"../config/constants\";\n\ntype Call = {\n  name: string;\n  address: string;\n  params?: any[];\n};\n\nconst getMulticall2Contract = (signerOrProvider: ethers.Signer | ethers.providers.Provider) => {\n  return new ethers.Contract(getAddress(contracts.multicall2), contracts.multicall2.abi, signerOrProvider);\n};\n\nexport const multicall = async (\n  signerOrProvider: ethers.Signer | ethers.providers.Provider,\n  abi: any,\n  calls: Call[]\n): Promise<any[][]> => {\n  try {\n    const multi = getMulticall2Contract(signerOrProvider);\n    const itf = new ethers.utils.Interface(abi);\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)]);\n    const { returnData } = await multi.aggregate(calldata);\n\n    const res = returnData.map((callResult: any, i: number) => itf.decodeFunctionResult(calls[i].name, callResult));\n\n    return res;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const multicall2 = async (\n  signerOrProvider: ethers.Signer | ethers.providers.Provider,\n  abi: any,\n  calls: Call[],\n  options = { requireSuccess: true }\n): Promise<any[][]> => {\n  const { requireSuccess } = options;\n  const multi = getMulticall2Contract(signerOrProvider);\n  const itf = new ethers.utils.Interface(abi);\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)]);\n\n  try {\n    const returnData = await multi.tryAggregate(requireSuccess, calldata);\n\n    const res = returnData.map((callResult: any, i: number) => {\n      const [result, data] = callResult;\n      return result ? itf.decodeFunctionResult(calls[i].name, data) : null;\n    });\n    return res;\n  } catch (err) {\n    console.log(\"[!] Multicall failed:\", err);\n    console.log(\"[!] calls:\", calls);\n    throw err;\n  }\n};\n","import { createContext, ReactNode, useCallback, useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { contracts, getAddress, REWARD_TOKEN_SYMBOL, RPC_URL } from \"../config/constants\";\nimport { multicall2 } from \"../util/multicall\";\n\nconst debug = (message: any, ...params: any[]) => {\n  // console.log(\"[AnyContext]:\", message, ...params);\n};\n\n// Context that provides values readable without MetaMask\nexport const AnyContext = createContext<{\n  anyProvider: ethers.providers.BaseProvider;\n\n  luckyDecimals: number;\n  luckyTotalSupply: string;\n}>({\n  anyProvider: null,\n\n  luckyDecimals: null,\n  luckyTotalSupply: null,\n});\n\nexport const AnyContextProvider = ({ children }: { children: ReactNode }) => {\n  const [provider, setProvider] = useState<ethers.providers.BaseProvider>(null);\n\n  const [luckyDecimals, setLuckyDecimals] = useState<number>(null);\n  const [luckyTotalSupply, setLuckyTotalSupply] = useState<string>(null);\n\n  useEffect(() => {\n    setProvider(ethers.providers.getDefaultProvider(RPC_URL));\n  }, []);\n\n  const loadLuckyData = useCallback(async () => {\n    if (provider == null) return;\n    debug(\"loadLuckyData\");\n    const luckyAddress = getAddress(contracts[REWARD_TOKEN_SYMBOL]);\n    const luckyAbi = contracts[REWARD_TOKEN_SYMBOL].abi;\n    const [\n      [_decimals], //\n      [_totalSupply],\n    ] = await multicall2(provider, luckyAbi, [\n      { address: luckyAddress, name: \"decimals\" },\n      { address: luckyAddress, name: \"totalSupply\" },\n    ]);\n    setLuckyDecimals(_decimals);\n    setLuckyTotalSupply(_totalSupply.toString());\n  }, [provider]);\n\n  const loadAll = useCallback(() => {\n    loadLuckyData();\n  }, [loadLuckyData]);\n\n  useEffect(() => {\n    loadAll();\n    const interval = setInterval(loadAll, 5000);\n    return () => clearInterval(interval);\n  }, [loadAll]);\n\n  return (\n    <AnyContext.Provider\n      value={{\n        anyProvider: provider,\n\n        luckyDecimals,\n        luckyTotalSupply,\n      }}\n    >\n      {children}\n    </AnyContext.Provider>\n  );\n};\n","import { createContext, ReactNode, useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CHAIN_ID } from \"../config/constants\";\n\nexport const Web3Context = createContext<{\n  provider: ethers.providers.Web3Provider;\n  chainId: number;\n  account: string;\n  ethBalance: string;\n}>({\n  provider: null,\n  chainId: null,\n  account: null,\n  ethBalance: null,\n});\n\nexport const Web3ContextProvider = ({ children }: { children: ReactNode }) => {\n  const [provider, setProvider] = useState<ethers.providers.Web3Provider>(null);\n  const [chainId, setChainId] = useState<number>(null);\n  const [account, setAccount] = useState<string>(null);\n  const [ethBalance, setEthBalance] = useState<string>(null);\n\n  useEffect(() => {\n    (async () => {\n      // await window.ethereum.enable();\n\n      if (!window.ethereum) {\n        alert(\"MetaMask is not installed. Please consider installing it: https://metamask.io/download.html\");\n        return;\n      }\n\n      window.ethereum.on(\"accountsChanged\", (accounts: string[]) => {\n        // console.log(\"account changed:\", accounts[0]);\n        window.location.reload();\n        // setAccount(accounts[0]);\n      });\n\n      window.ethereum.on(\"chainChanged\", (chainId: number[]) => {\n        console.log(\"chain changed:\", chainId);\n        window.location.reload();\n      });\n\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(provider);\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (chainId == null) return;\n    if (chainId !== CHAIN_ID) {\n      console.log(`Chain ID is ${chainId}. Please change to the right network.`);\n    }\n  }, [chainId]);\n\n  // This only happens once\n  useEffect(() => {\n    (async () => {\n      if (provider == null) return;\n\n      const chainId = (await provider.getNetwork()).chainId;\n      if (chainId !== CHAIN_ID) return;\n      setChainId(chainId);\n\n      const account = (await provider.listAccounts())[0];\n      if (account != null) {\n        setAccount(account);\n      } else {\n        return console.log(\"You need to connect to MetaMask in order to use this site.\");\n      }\n    })();\n  }, [provider, chainId]);\n\n  useEffect(() => {\n    (async () => {\n      if (provider == null || account == null) {\n        setEthBalance(null);\n        return;\n      }\n      try {\n        setEthBalance((await provider.getBalance(account)).toString());\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, [provider, account]);\n\n  return (\n    <Web3Context.Provider\n      value={{\n        provider,\n        chainId,\n        account,\n        ethBalance,\n      }}\n    >\n      {children}\n    </Web3Context.Provider>\n  );\n};\n","export const NFT_ABI = [\n  { inputs: [], stateMutability: \"nonpayable\", type: \"constructor\" },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"owner\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"approved\", type: \"address\" },\n      { indexed: true, internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"owner\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"operator\", type: \"address\" },\n      { indexed: false, internalType: \"bool\", name: \"approved\", type: \"bool\" },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"minter\", type: \"address\" },\n      { indexed: true, internalType: \"uint256\", name: \"count\", type: \"uint256\" },\n    ],\n    name: \"Minted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"previousOwner\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"newOwner\", type: \"address\" },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\n      { indexed: true, internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\n    name: \"balanceOf\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"baseURI\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\n    name: \"getApproved\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\n    name: \"ownerOf\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  { inputs: [], name: \"renounceOwnership\", outputs: [], stateMutability: \"nonpayable\", type: \"function\" },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"from\", type: \"address\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"from\", type: \"address\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\n      { internalType: \"bool\", name: \"approved\", type: \"bool\" },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"string\", name: \"baseURI_\", type: \"string\" }],\n    name: \"setBaseURI\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"bytes4\", name: \"interfaceId\", type: \"bytes4\" }],\n    name: \"supportsInterface\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\n    name: \"tokenByIndex\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\n      { internalType: \"uint256\", name: \"index\", type: \"uint256\" },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\n    name: \"tokenURI\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"from\", type: \"address\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  { stateMutability: \"payable\", type: \"receive\" },\n];\n","import { createContext, ReactNode, useCallback, useContext, useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { Web3Context } from \"./Web3Context\";\nimport { contracts, getAddress } from \"../config/constants\";\nimport { handleTxError } from \"../util/misc\";\nimport { multicall2 } from \"../util/multicall\";\nimport { NFT_ABI } from \"../config/abi/nft\";\nimport { REWARDER_ABI } from \"../config/abi/rewarder\";\n\n// const getOwnedTokenIds = async (\n//   contract: ethers.Contract,\n//   abi: any,\n//   provider: ethers.providers.Provider,\n//   account: string\n// ) => {\n//   if (contract == null) return;\n//   if (provider == null) return;\n//   if (account == null) return;\n//   const balance = await contract.balanceOf(account);\n//   if (balance === 0) return;\n//   const calls = [];\n//   for (let i = 0; i < balance; i++) {\n//     calls[i] = {\n//       address: contract.address,\n//       name: \"tokenOfOwnerByIndex\",\n//       params: [account, i],\n//     };\n//   }\n//   const results = await multicall2(provider, abi, calls, { requireSuccess: true });\n//   return results.map(([x]) => x.toString());\n// };\n\nconst getBalances = async (addresses: string[], abi: any, provider: ethers.providers.Provider, account: string) => {\n  if (provider == null) return;\n  if (account == null) return;\n  const calls = [];\n  for (const address of addresses) {\n    calls.push({\n      address: address,\n      name: \"balanceOf\",\n      params: [account],\n    });\n  }\n  const results = await multicall2(provider, abi, calls, { requireSuccess: true });\n  const balances: Record<string, number> = {};\n  for (let i = 0; i < addresses.length; i++) {\n    const address = addresses[i];\n    balances[address] = results[i][0].toString();\n  }\n  return balances;\n};\n\nconst getOwnedTokenIds = async (\n  balances: Record<string, number>,\n  abi: any,\n  provider: ethers.providers.Provider,\n  account: string\n) => {\n  if (provider == null) return;\n  if (account == null) return;\n  const result: any = {};\n  for (const nftAddress in balances) {\n    const balance = balances[nftAddress];\n    const calls1 = [];\n    for (let i = 0; i < balance; i++) {\n      calls1.push({\n        address: nftAddress,\n        name: \"tokenOfOwnerByIndex\",\n        params: [account, i],\n      });\n    }\n    const xx = await multicall2(provider, abi, calls1, { requireSuccess: true });\n    const tokenIds = xx.map(([x]) => x.toString());\n\n    const rewarderAddress = getAddress(contracts.rewarder);\n    const calls2 = [];\n    for (const tokenId of tokenIds) {\n      calls2.push({\n        address: rewarderAddress,\n        name: \"lastCheckpoint\",\n        params: [nftAddress, tokenId],\n      });\n    }\n    const yy = await multicall2(provider, contracts.rewarder.abi, calls2, { requireSuccess: true });\n    const checkpoints = yy.map(([y]) => y.toString());\n    // debug(\"checkpoints:\", checkpoints);\n\n    result[nftAddress] = { tokenIds, checkpoints };\n  }\n  return result;\n};\n\nconst getNfts = async (provider: ethers.providers.Provider, count: number) => {\n  if (provider == null) return;\n\n  const address = getAddress(contracts.rewarder);\n\n  const calls1 = [];\n  for (let i = 0; i < count; i++) {\n    calls1.push({ address: address, name: \"entries\", params: [i] });\n  }\n  const results1 = await multicall2(provider, REWARDER_ABI, calls1, { requireSuccess: true });\n  const rs1 = results1.map(([x, y]) => [x.toString(), y.toString()]);\n  console.log(rs1);\n\n  // TODO - name and symbol might fail!\n\n  const calls2 = [];\n  for (const [nftAddress] of rs1) {\n    calls2.push({ address: nftAddress, name: \"name\", params: [] });\n  }\n  const results2 = await multicall2(provider, NFT_ABI, calls2, { requireSuccess: true });\n  const rs2 = results2.map(([x]) => x.toString());\n\n  const calls3 = [];\n  for (const [nftAddress] of rs1) {\n    calls3.push({ address: nftAddress, name: \"symbol\", params: [] });\n  }\n  const results3 = await multicall2(provider, NFT_ABI, calls3, { requireSuccess: true });\n  const rs3 = results3.map(([x]) => x.toString());\n\n  const xs: any = {};\n  for (let i = 0; i < count; i++) {\n    const [address, weight] = rs1[i];\n    const name = rs2[i];\n    const symbol = rs3[i];\n    xs[address] = { address, weight, name, symbol };\n  }\n\n  return xs;\n};\n\nconst debug = (message: any, ...params: any[]) => {\n  console.log(\"[UserContext]:\", message, ...params);\n};\n\nexport const UserContext = createContext<{\n  pendingReward: string;\n  ownedTokens: any[];\n  nfts: any[];\n  claim: Function;\n}>({\n  pendingReward: null,\n  ownedTokens: null,\n  nfts: null,\n  claim: null,\n});\n\nexport const UserContextProvider = ({ children }: { children: ReactNode }) => {\n  const { account, provider } = useContext(Web3Context);\n\n  const [rewarderContract, setRewarderContract] = useState<ethers.Contract>(null);\n\n  const [pendingReward, setPendingReward] = useState<string>(null);\n  const [ownedTokens, setOwnedTokens] = useState<any>(null);\n  const [nfts, setNfts] = useState<any[]>(null);\n\n  // const [logs, setLogs] = useState<any[]>(null);\n\n  useEffect(() => {\n    if (account == null) return;\n    if (provider == null) return;\n    const signer = provider.getSigner();\n    setRewarderContract(new ethers.Contract(getAddress(contracts.rewarder), contracts.rewarder.abi, signer));\n  }, [account, provider]);\n\n  const loadOwnedTokens = useCallback(async () => {\n    if (account == null) return;\n    if (provider == null) return;\n    if (nfts == null) return;\n    debug(\"loadOwnedTokens\");\n\n    const balances = await getBalances(Object.keys(nfts), NFT_ABI, provider, account);\n    // debug(\"balances:\", balances);\n\n    const ownedTokenIds = await getOwnedTokenIds(balances, NFT_ABI, provider, account);\n    // debug(\"ownedTokenIds:\", ownedTokenIds);\n    setOwnedTokens(ownedTokenIds);\n  }, [account, provider, nfts]);\n\n  const loadRewarder = useCallback(async () => {\n    if (provider == null) return;\n    if (rewarderContract == null) return;\n    const count = (await rewarderContract.entriesCount()).toNumber();\n    const nfts = await getNfts(provider, count);\n    setNfts(nfts);\n    setPendingReward((await rewarderContract.pendingReward()).toString());\n  }, [provider, rewarderContract]);\n\n  useEffect(() => {\n    loadRewarder();\n    const interval = setInterval(loadRewarder, 5000);\n    return () => clearInterval(interval);\n  }, [loadRewarder]);\n\n  useEffect(() => {\n    loadOwnedTokens();\n    const interval = setInterval(loadOwnedTokens, 5000);\n    return () => clearInterval(interval);\n  }, [loadOwnedTokens]);\n\n  const claim = useCallback(async () => {\n    try {\n      rewarderContract.update();\n    } catch (err) {\n      handleTxError(err);\n    }\n  }, [rewarderContract]);\n\n  return (\n    <UserContext.Provider\n      value={{\n        //   logs,\n        pendingReward,\n        ownedTokens,\n        nfts,\n        claim,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\n//   const loadLogs = useCallback(async () => {\n//     if (provider == null) return;\n//     if (account == null) return;\n//     const block = await provider.getBlockNumber();\n//     const address = getAddress(tokens[REWARD_TOKEN_SYMBOL]);\n//     const results = [];\n//     for (let [b, i] = [block, 0]; i < 3; [b, i] = [b - 10000, i + 1]) {\n//       const filter = {\n//         address: address,\n//         fromBlock: b - 10000,\n//         toBlock: b,\n//         // topics: [ethers.utils.id(\"Transfer(address,address,uint256)\"), null, ethers.utils.hexZeroPad(account, 32)],\n//         topics: [ethers.utils.id(\"EarnedReward(address,uint256,uint256,uint256)\")],\n//       };\n//       const logs = await provider.getLogs(filter);\n//       results.push(\n//         ...logs.map((log) => {\n//           const [amount, chanceBP, rewardBP] = ethers.utils.defaultAbiCoder.decode(\n//             [\"uint256\", \"uint256\", \"uint256\"],\n//             log.data\n//           );\n//           return {\n//             block: log.blockNumber,\n//             to: ethers.utils.hexStripZeros(log.topics[1]), // recipient\n//             data: {\n//               amount: parseFloat(ethers.utils.formatEther(amount)).toFixed(5),\n//               chance: (chanceBP.toNumber() / 100).toFixed(2) + \"%\",\n//               reward: (rewardBP.toNumber() / 100).toFixed(2) + \"%\",\n//             },\n//             tx: log.transactionHash,\n//           };\n//         })\n//       );\n//     }\n//     setLogs(results.sort((a, b) => b.block - a.block));\n//   }, [provider, account]);\n","import { ReactNode } from \"react\";\n\ntype AProps = {\n  href: string;\n  className?: string;\n  children: ReactNode;\n};\n\nexport const A = ({ className = \"\", href, children }: AProps) => (\n  <a className={className} href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n    {children}\n  </a>\n);\n","export default __webpack_public_path__ + \"static/media/LABS.1b211f96.png\";","import { T } from \"../types/mytypes\";\nimport {\n  contracts,\n  REWARD_TOKEN_DECIMALS,\n  REWARD_TOKEN_NAME,\n  REWARD_TOKEN_SYMBOL,\n  REWARD_TOKEN_URL,\n} from \"./constants\";\n\nimport iconLABS from \"../resources/img/tokens/LABS.png\";\n\ntype Tokens = {\n  [REWARD_TOKEN_SYMBOL]: T.Token;\n};\n\nexport const tokens: Tokens = {\n  [REWARD_TOKEN_SYMBOL]: {\n    addresses: contracts[REWARD_TOKEN_SYMBOL].addresses,\n    decimals: REWARD_TOKEN_DECIMALS,\n    symbol: REWARD_TOKEN_SYMBOL,\n    name: REWARD_TOKEN_NAME,\n    url: REWARD_TOKEN_URL,\n    image: iconLABS,\n  },\n};\n","export default __webpack_public_path__ + \"static/media/potluck-labs.02e22f1f.png\";","import { ethers } from \"ethers\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Web3Context } from \"../contexts/Web3Context\";\nimport { UserContext } from \"../contexts/UserContext\";\nimport { A } from \"../components/A\";\nimport { addToken, onClickConnect, shortenAddress, switchChain } from \"../util/misc\";\nimport { CHAIN_ID, contracts, getAddress, REWARD_TOKEN_SYMBOL, SCAN } from \"../config/constants\";\nimport { tokens } from \"../config/tokens\";\n\nimport banner from \"../resources/img/potluck-labs.png\";\n\nconst f = (x: ethers.BigNumberish, units = 18): string => ethers.utils.formatUnits(x.toString(), units);\n// const p = (x: string, units = 18): ethers.BigNumber => ethers.utils.parseUnits(x, units);\n// const c = (x: number, d = 0) => ethers.utils.commify(x.toFixed(d));\nconst c = (x: string, d = 0) => ethers.utils.commify(parseFloat(x).toFixed(d));\n\nexport const Home = () => {\n  const { account, provider, chainId } = useContext(Web3Context);\n  const { pendingReward, ownedTokens, nfts, claim } = useContext(UserContext);\n\n  const [loaded, setLoaded] = useState(false);\n\n  const [needsUpdate, setNeedsUpdate] = useState(null);\n\n  useEffect(() => {\n    if (nfts == null) return;\n    if (ownedTokens == null) return;\n\n    for (const key in nfts) {\n      const nft = nfts[key];\n      const cs = ownedTokens[nft.address].checkpoints;\n      for (const c of cs) {\n        if (c === \"0\") {\n          setNeedsUpdate(true);\n          return;\n        }\n      }\n    }\n    setNeedsUpdate(false);\n  }, [nfts, ownedTokens]);\n\n  useEffect(() => {\n    if (pendingReward == null) return;\n    if (ownedTokens == null) return;\n    if (nfts == null) return;\n    setLoaded(true);\n  }, [pendingReward, ownedTokens, nfts]);\n\n  // if (!loaded) {\n  //   return <div>Loading...</div>;\n  // }\n\n  const WrongNetwork = () => {\n    return (\n      <div>\n        <div>You are connected to an unsupported chain.</div>\n        <button className=\"btn\" onClick={() => switchChain()}>\n          Change Network\n        </button>\n      </div>\n    );\n  };\n\n  const NotConnected = () => {\n    return (\n      <div>\n        <button className=\"btn\" onClick={() => onClickConnect(provider, account)}>\n          Connect Wallet\n        </button>\n      </div>\n    );\n  };\n\n  const Connected = () => {\n    if (!loaded) {\n      return <div>Loading...</div>;\n    }\n    return (\n      <div>\n        <button className=\"btn\" onClick={() => claim()}>\n          {needsUpdate && \"Update &\"} Claim\n          <br />\n          <span className=\"btn-amount\">{c(f(pendingReward), 3)} $LABS</span>\n        </button>\n\n        <div>\n          Connected as <A href={`${SCAN}/address/${account}`}>{shortenAddress(account, 4)}</A>\n        </div>\n        <br />\n        <div>\n          <span className=\"add-to-metamask\" onClick={() => addToken(tokens[REWARD_TOKEN_SYMBOL])}>\n            Add $LABS to MetaMask\n          </span>\n        </div>\n\n        <div className=\"info\">\n          <h2>Approved NFT collections</h2>\n          <p>\n            Here you see which NFT collections you are able to earn rewards for, and which NFTs you own in each\n            collection (by token ID).\n          </p>\n        </div>\n\n        {needsUpdate && (\n          <div className=\"have-untracked\">\n            You have untracked NFTs!\n            <br />\n            Press the \"Update &amp; Claim\" button to register them.\n          </div>\n        )}\n\n        <div className=\"nfts\">\n          {Object.values(nfts).map((nft) => (\n            <div className=\"nft\" key={nft.address}>\n              <div className=\"nft-name-symbol\">\n                {nft.name} ({nft.symbol})\n              </div>\n\n              <div className=\"nft-address\">\n                <A href={`${SCAN}/token/${nft.address}`}>{shortenAddress(nft.address, 4)}</A>\n              </div>\n\n              <div>Reward multiplier: {nfts[nft.address].weight}x</div>\n              <br />\n\n              <div>\n                {ownedTokens[nft.address].tokenIds.map((x: any, i: number) => (\n                  <div>\n                    &nbsp; {ownedTokens[nft.address].checkpoints[i] === \"0\" ? \"⚠️\" : \"✅\"} Token {x}\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"home\">\n      <div className=\"wrapper\">\n        <img className=\"banner\" src={banner} alt=\"Banner\" />\n        <div className=\"info\">\n          <h2>Hold NFTs, earn $LABS.</h2>\n          <p>\n            For every NFT you hold from a Potluck Labs-approved collection, you gain some $LABS (Potluck Labs Token)\n            every second.\n          </p>\n          <p>\n            In order to start earning rewards for an NFT, you need to register it with the{\" \"}\n            <A href={`${SCAN}/address/${getAddress(contracts.rewarder)}`}>Rewarder contract</A> by pressing the button\n            below.\n          </p>\n        </div>\n\n        <div className=\"connection\">\n          {chainId !== CHAIN_ID ? <WrongNetwork /> : account ? <Connected /> : <NotConnected />}\n        </div>\n\n        <div className=\"boxes\">\n          <div className=\"box\"></div>\n          <div className=\"box\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Routes, Route } from \"react-router-dom\";\n\nimport { UtilContextProvider } from \"./contexts/UtilContext\";\nimport { AnyContextProvider } from \"./contexts/AnyContext\";\nimport { Web3ContextProvider } from \"./contexts/Web3Context\";\nimport { UserContextProvider } from \"./contexts/UserContext\";\n\nimport { Home } from \"./views/Home\";\n\nfunction App() {\n  return (\n    <UtilContextProvider>\n      <AnyContextProvider>\n        <Web3ContextProvider>\n          <UserContextProvider>\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n            </Routes>\n          </UserContextProvider>\n        </Web3ContextProvider>\n      </AnyContextProvider>\n    </UtilContextProvider>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport App from \"./App\";\n\nimport \"./style/normalize.css\";\nimport \"./style/app.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}